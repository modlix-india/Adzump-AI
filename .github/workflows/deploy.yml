name: Build and Deploy (Docker)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # Prefer GITHUB_TOKEN for same-repo publishing, else GHCR_TOKEN
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN || github.token }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/modlix-india/adzump-ai
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    # Use a self-hosted runner if you must be inside VPN
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout (for docker-compose.yml if needed)
        uses: actions/checkout@v4

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create SSH config
        run: |
          mkdir -p ~/.ssh
          printf "Host target\n  HostName %s\n  User %s\n  Port %s\n  StrictHostKeyChecking no\n" \
            "${{ secrets.SERVER_HOST }}" "${{ secrets.SERVER_USER }}" "${{ secrets.SERVER_PORT }}" >> ~/.ssh/config

      - name: Push compose file to server
        run: |
          rsync -az --delete \
            --exclude ".git" \
            --exclude ".github" \
            docker-compose.yml target:${{ secrets.SERVER_APP_PATH }}/

      - name: Deploy on server (docker login, pull, up)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -euo pipefail
            cd ${{ secrets.SERVER_APP_PATH }}
            # Login to GHCR (use ephemeral GitHub token passed as env)
            echo $GITHUB_TOKEN | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin || true
            # Export TAG for compose to use; pick the tag built in this run
            TAG=latest docker compose pull
            TAG=latest docker compose up -d
            docker image prune -f
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_ACTOR: ${{ github.actor }}